* have to do
1. Set up the paging system, have working virtual memory
2. Trap handling
3. Working system calls
4. Have a working file system
5. Scheduling (probably have to change the assembly that does the context
   switching, all the trap frame stuff, etc)
* vm
- https://www.cs.utexas.edu/~simon/378/resources/ARMv7-AR_TRM.pdf
- 1370: system control register
- 1282: first level descriptors
- 1302: permissions
- 1306: C, B, TEX
* probably should do
** essential shell commands
- int exit(void) __attribute__((noreturn));
- int wait(void);
- int write(int, void*, int);
- int read(int, void*, int);
- int close(int);
- int kill(int);
- int exec(char*, char**);
- int open(char*, int);
- int mknod(char*, short, short);
- int mkdir(char*);
- int chdir(char*);
- int dup(int);
- int getpid(void);
- char* sbrk(int);
- int sleep(int);
* ha ha ha
1. Logging
** nonessential shell commands
- int fork(void);
- int pipe(int*);
- int unlink(char*);
- int fstat(int fd, stat*);
- int link(char*, char*);
- int uptime(void);
